{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000 // 30 seconds timeout for file uploads\n});\n\n// Request interceptor for adding auth headers if needed\napi.interceptors.request.use(config => {\n  // Add any auth headers here if needed\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  console.error('API Error:', error);\n  if (error.response) {\n    var _error$response$data;\n    // Server responded with error status\n    const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'An error occurred';\n    return Promise.reject(new Error(message));\n  } else if (error.request) {\n    // Request was made but no response received\n    return Promise.reject(new Error('No response from server. Please check your connection.'));\n  } else {\n    // Something else happened\n    return Promise.reject(new Error('An unexpected error occurred.'));\n  }\n});\n\n// API functions\nexport const apiService = {\n  // Analyze documents\n  analyzeDocuments: async (tenderFile, proposalFile) => {\n    const formData = new FormData();\n    formData.append('tender', tenderFile);\n    formData.append('proposal', proposalFile);\n    const response = await api.post('/api/analyze', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n  // Chat with AI\n  chat: async (message, context) => {\n    const response = await api.post('/api/chat', {\n      message,\n      context\n    });\n    return response.data;\n  },\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/');\n    return response.data;\n  }\n};\nexport default apiService;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","timeout","interceptors","request","use","config","error","Promise","reject","response","console","_error$response$data","message","data","Error","apiService","analyzeDocuments","tenderFile","proposalFile","formData","FormData","append","post","headers","chat","context","healthCheck","get"],"sources":["/Users/bnikheel/tender_analizer/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds timeout for file uploads\n});\n\n// Request interceptor for adding auth headers if needed\napi.interceptors.request.use(\n  (config) => {\n    // Add any auth headers here if needed\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    console.error('API Error:', error);\n    \n    if (error.response) {\n      // Server responded with error status\n      const message = error.response.data?.error || 'An error occurred';\n      return Promise.reject(new Error(message));\n    } else if (error.request) {\n      // Request was made but no response received\n      return Promise.reject(new Error('No response from server. Please check your connection.'));\n    } else {\n      // Something else happened\n      return Promise.reject(new Error('An unexpected error occurred.'));\n    }\n  }\n);\n\n// API functions\nexport const apiService = {\n  // Analyze documents\n  analyzeDocuments: async (tenderFile, proposalFile) => {\n    const formData = new FormData();\n    formData.append('tender', tenderFile);\n    formData.append('proposal', proposalFile);\n\n    const response = await api.post('/api/analyze', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n\n    return response.data;\n  },\n\n  // Chat with AI\n  chat: async (message, context) => {\n    const response = await api.post('/api/chat', {\n      message,\n      context,\n    });\n\n    return response.data;\n  },\n\n  // Health check\n  healthCheck: async () => {\n    const response = await api.get('/');\n    return response.data;\n  },\n};\n\nexport default apiService; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE,KAAK,CAAE;AAClB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV;EACA,OAAOA,MAAM;AACf,CAAC,EACAC,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAR,GAAG,CAACI,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAK;EACZ,OAAOA,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EACTI,OAAO,CAACJ,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;EAElC,IAAIA,KAAK,CAACG,QAAQ,EAAE;IAAA,IAAAE,oBAAA;IAClB;IACA,MAAMC,OAAO,GAAG,EAAAD,oBAAA,GAAAL,KAAK,CAACG,QAAQ,CAACI,IAAI,cAAAF,oBAAA,uBAAnBA,oBAAA,CAAqBL,KAAK,KAAI,mBAAmB;IACjE,OAAOC,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAACF,OAAO,CAAC,CAAC;EAC3C,CAAC,MAAM,IAAIN,KAAK,CAACH,OAAO,EAAE;IACxB;IACA,OAAOI,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAAC,wDAAwD,CAAC,CAAC;EAC5F,CAAC,MAAM;IACL;IACA,OAAOP,OAAO,CAACC,MAAM,CAAC,IAAIM,KAAK,CAAC,+BAA+B,CAAC,CAAC;EACnE;AACF,CACF,CAAC;;AAED;AACA,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,gBAAgB,EAAE,MAAAA,CAAOC,UAAU,EAAEC,YAAY,KAAK;IACpD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEJ,UAAU,CAAC;IACrCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,YAAY,CAAC;IAEzC,MAAMT,QAAQ,GAAG,MAAMX,GAAG,CAACwB,IAAI,CAAC,cAAc,EAAEH,QAAQ,EAAE;MACxDI,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC,CAAC;IAEF,OAAOd,QAAQ,CAACI,IAAI;EACtB,CAAC;EAED;EACAW,IAAI,EAAE,MAAAA,CAAOZ,OAAO,EAAEa,OAAO,KAAK;IAChC,MAAMhB,QAAQ,GAAG,MAAMX,GAAG,CAACwB,IAAI,CAAC,WAAW,EAAE;MAC3CV,OAAO;MACPa;IACF,CAAC,CAAC;IAEF,OAAOhB,QAAQ,CAACI,IAAI;EACtB,CAAC;EAED;EACAa,WAAW,EAAE,MAAAA,CAAA,KAAY;IACvB,MAAMjB,QAAQ,GAAG,MAAMX,GAAG,CAAC6B,GAAG,CAAC,GAAG,CAAC;IACnC,OAAOlB,QAAQ,CAACI,IAAI;EACtB;AACF,CAAC;AAED,eAAeE,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}